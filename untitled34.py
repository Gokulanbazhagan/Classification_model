# -*- coding: utf-8 -*-
"""Untitled34.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10HOo10J51qtZmzpIqvcCkVW5JnhSRA0v
"""

import zipfile

with zipfile.ZipFile("Cat_Dog.zip", 'r') as zip_ref:
    zip_ref.extractall("Cat_Dog")

from tensorflow.keras.preprocessing.image import ImageDataGenerator

image_gen=ImageDataGenerator(rescale=1./255,validation_split=0.2)
train_data=image_gen.flow_from_directory("Cat_Dog/Cat_Dog/train_test/Train",target_size=(128,128),batch_size=32,class_mode="binary",subset="training")
vali_data=image_gen.flow_from_directory("Cat_Dog/Cat_Dog/train_test/Train",target_size=(128,128),batch_size=32,class_mode="binary",subset="validation")

from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Conv2D,MaxPooling2D,Flatten,Dense

model = Sequential([
    Conv2D(32,(3,3),activation="relu",input_shape=(128,128,3)),
    MaxPooling2D(2,2),
    Conv2D(64,(3,3),activation="relu"),
    MaxPooling2D(2,2),
    Flatten(),
    Dense(64,activation="relu"),
    Dense(2,activation="softmax")
])

model.compile(optimizer="adam",loss="sparse_categorical_crossentropy",metrics=["accuracy"])
history=model.fit(train_data,validation_data=vali_data,epochs=10)

from tensorflow.keras.preprocessing import image
import numpy as np
img=image.load_img("dog1.jpg",target_size=(128,128))
img_arr=image.img_to_array(img)
img_arr=np.expand_dims(img_arr,axis=0)
img_arr=img_arr/255.0

prediction=model.predict(img_arr)
pred_class=np.argmax(prediction)
class_name=["Cat","Dog"]
print(class_name[pred_class])

import matplotlib.pyplot as plt

plt.plot(history.history['accuracy'], label='Train Accuracy')
plt.plot(history.history['val_accuracy'], label='Val Accuracy')
plt.xlabel('Epochs')
plt.ylabel('Accuracy')
plt.legend()
plt.show()

plt.plot(history.history['loss'], label='Train Loss')
plt.plot(history.history['val_loss'], label='Val Loss')
plt.xlabel('Epochs')
plt.ylabel('Loss')
plt.legend()
plt.show()

test_img_gen=ImageDataGenerator(rescale=1./255)
test_data=test_img_gen.flow_from_directory("Cat_Dog/Cat_Dog/train_test/Test",target_size=(128,128),batch_size=32,class_mode="binary",shuffle=False)

loss, accuracy = model.evaluate(test_data)
print("Test Loss:", loss)
print("Test Accuracy:", accuracy)